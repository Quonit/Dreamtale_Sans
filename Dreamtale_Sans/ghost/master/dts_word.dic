//Funny Envelopes
bookstoread //Stolen from Zarla's hs ghost. Some are written by me.
{
	"a hefty-looking book on skeleton history"
	"a romance novel about a monster and human %(ANY('','that both die in the end'))"
	"a book by that one guy who did a metric ton of cocaine" //Hunter S Thompson? or are we talking Buroughs's Naked Lunch?
	"a book with Tolkien-like birds" //tolkien-like *birds*? like, the eagles, or... Or are we talking Guardians of Ga'Hoole?
	"an old fantasy novel about transgender wizards"
	"a really weird book where a lot of the text is upside-down or in spirals" //House of Leaves?
	"a book about demon hunters and prophecies that is a total rip-off of that one other show" //something based off Supernatural, I bet. Could be The Demon's Lexicon?
	"a rip-off of that other popular series"
	"a book where there's a monster at the end" //...is that the sesame street book
	"a book about a rare extinct bird"
	"a book where everyone's miserable and their marriages are falling apart"
	"a book with rabbits and made-up words" //Watership Down!
	"a depressing book about two dogs who escape a research lab" //see, this seems like Mrs Frisby and the Rats of NIMH, but that was mice
	"a cute book about a princess who lives with a dragon"
	"a book about a kid who lived in a sewer"
	"a book about a weird magician messing with some sociologist"
	"a book about the gift of fear"
	"a book about talking mice" //Mrs Frisby and the Rats of NIMH, Ralph the Motorcycle Mouse, etc.
	"a book about the Monsters and Humans War"
	"a book about the Monsters and Humans War except with dragons" //Temeraire
	"a book about a mad scientist that kept kis kids as lab rats" //platehands
	"a book about two kids living in a treehouse" //feck, I wanna say this is a mash-up of The Boxcar Children, The Magic Treehouse, and The Swiss Family Robinson
	"a book about a guy who thought he was a soldier but was really a robot \w4but then maybe he really was a person who just thought he was a robot"
	"a preachy book about politics"
	"a book with spaceships and social commentary" //all of them? //but could be The Ship Who Sang, could be The Imperial Radch...
	"a book where everyone dies at the end"
	"a book about serial killers"
	"a book about made-up crime"
	"a book about creepy occult activity around here"
	"an instructional book about magic"
	"a cursed book whose cover is made of skin"
	"a book that screams every time you open it"
	"a mysterious journal with a %(ANY('2','3')) on it" //Gravity Falls notebook
	"a book with a glossary at the end, like come on"
	"a sappy romance novel"
	"a book told entirely through people's letters to each other" //an epistolary novel!
	"a romance novel that turned into a zombie apocalypse halfway through" //Pride and Prejudice and Zombies?
	"a book where it turned out the narrator was YOU!"
	"a book that makes you rethink your life"
	"a book that scars you for life"
	"a book that spends most of its time threatening you" //Series of Unfortunate Events?
	"a book about a cat's nine lives" //I read a picture book like this
	"a book of short stories where a long finger came out of a bathroom sink drain" //haven't read this one. could be one of the Scary Stories to Tell in the Dark?
	"a book with a lady who has a bug for a head" //Perdido Street Station?
	"a book where the dude turns into a bug and it's like a metaphor or something" ///Kafka's Metamorphosis
	"a book with flowery prose about being a barbarian" //I wanna say The Eye of Argon, but...
	"a book that's pretty good except the main character sucks"
	"a tell-all gossip book"
	"a really terrible book by that one actress"
	"a book you have to set on fire to get the real ending"
	"a book about burning books" //Fahrenheit 451
	"a book about %(ANY('human','monster')) history"
	"a book about gay %(ANY('vampires','werewolves','dragons'))"
	"a book about a governess who fell in love with a guy who had his crazy wife in the attic" //Jane Eyre
	"a super bleak book with baby-eating" //for some reason, I keep thinking The Giver
	"a really cute book about the wallflower finding a wall" //Perks of Being a Wallflower? I've never read it
	"a book about a giant centipede that wants to enter a famous dog show"
	"a weird report about killer stacks of paper" //I bet there's a Steven King story like this
	"a book about children who die horrible gruesome deaths in the chocolate factory" //Charlie and the Chocolate Factory
	"a boring book everyone has to read in school. You know what one I'm talking about." //Lord of the Flies?
	"a weird book where the story's split in two and one starts at the end and one starts at the beginning and then they meet at the center"
	"a book of stupid jokes"
	"a book of thought experiments"
	"a book of fox sounds" //the fox says "A couple of you will grease my chin before I leave this town-o"
	"a book where everyone's hopping around different dimensions" //the UTMV. or the latter books of His Dark Materials
	"a book that doesn't have words, it just has the same picture of the same guy on every page"
	"a book about four ladies in a zombie apocalypse" //respectawoman!
	"a book about a ruined salseman" //the man spam
	"an autobiography written by the guy that harrassed people into singing with him" //haven't a clue
	"a book about the oldest tricks"
	//WORMDITIONS!
	"a book about spaceships that's really about gender"
	"a really complicated family saga where everyone keeps re-using the same names"
	"an annotated edition of a book about nonsense"
	"a philosophical treatise by some old dead Greek guy"
	"a war that started with an apple and ended with a horse"
	"a collection of %(ANY('','retold '))fairy tales"
	"a book about sad gay wizards and pretty horses"
	"an annotated collection of folk songs"
	"a book about space communism"
	"a novelization of some blockbuster movie"
	"a book about knights and wizards"
	"a book about ponies"
	"a book about the invention of pants"
}

usersfolder //Different folders for the computer
{
	"Downloads folder"
	"Pictures folder"
	"Document folder"
	"Programs folder"
	"Desktop folder"
	"secret folder"
	"Music folder"
	"Video folder"
	"Recycle Bin"
	"SSP folder"
	"System 32"
}

tea
{
	"Constant Comment"
	"Double Spice"
	"White Rasberry"
	"Earl Gray"
	"Honey Lemon Ginger"
	"Black Cherry"
	"Herbal Mint"
	"Blood Orange"
	"Chai"
	"Chamomile"
	"Honey Lavender"
	"Cucumber Mint"
	"Citrus Mint"
	"Ginger Lemongrass"
	"Green Mango Peach"
	"Ginger"
	"Mango Peach"
	"Lemon Lavender"
	"Kiwi Lime"
	"Vanilla Peach"
}


//Coding Envelopes
nightname //Decides which name to use for him
{
	if nightynight == "on"
	{
		"Nighty"
	}
	else
	{
		"Nightmare"
	}
}

nicensadlevel
{
	posact - negact
}

sadnicelevel
{
	niceact - sadact
}

VillageLevel //Negative variable that also catches if you've hit him or not. Used so that you can't unlock goopmare without hurting him
{
	//punchout - nicensadlevel
	
	if apologized == 0
	//if you haven't apologized
	{
		if punchout < 1; {0} //if you haven't apologized because you haven't punched him, VillageLevel is 0
		else; {betrayalvar + punchout + negact} //if you've punched him and haven't apologized, it's the betrayalvar (how high his friendship was when you first punched him) + number of punches + how mean you've been to him verbally
	}
	else
	//if you have apologized to him
	{
		if punchout == 0
		//if you've apologized for punching him, punches might get reset to 0
		{
			if apologized >= 2; {betrayalvar + apologized + negact} //if you've punched then apologized repeatedly
			else; {apologized + negact} 
		}
		//if you've apologized to him, but have punched him far too much
		else; {betrayalvar + punchout + negact}
	}
	
}

ItemMOO //Put this at the end of the item menu instead of typing this out 30 times
{
	"\n\n\![*]\q[Give him something different,itemsmenu]\n/
	\![*]\q[Back to main menu,BACKTOMENU]\n/
	\![*]\q[Nevermind,CANCEL]\e"
}
actigon //Put this at the end of the act menu instead of typing this out 30 times
{
	"\n\n\![*]\q[Choose another ACTion,Onyouact]\n/
	\![*]\q[Back to main menu,BACKTOMENU]\n/
	\![*]\q[Nevermind,CANCEL]\e"
}
backask //Put this at the end of the ask menu instead of typing this out 30 times
{
	if nowmode != "Edgybitch"
	{
		"\n\n\![*]\q[Ask something else,youtalk]\n"
	}
	else
	{
		"\n\n\![*]\q[Ask something else,goopask]\n"
	}
	--
	"\![*]\q[Back to main menu,BACKTOMENU]\n/
	\![*]\q[Nevermind,CANCEL]\e"
}
backmenu //Put at the end of settings
{
	"\n\n\![*]\q[Back to Settings,configmenu]\n/
	\![*]\q[Back to main menu,BACKTOMENU]\n/
	\![*]\q[Nevermind,CANCEL]\e"
}

funmenu //Put at the end of functions
{
	"\n\n\![*]\q[Back to functions,dosomething]\n/
	\![*]\q[Back to main menu,BACKTOMENU]\n/
	\![*]\q[Nevermind,CANCEL]\e"
}


changemode
{
	//take the new mode as an argument
	//if the new mode is the same as the current mode, change nothing
	//if the new mode is different from the current mode, save the current mode as oldmode; then change to the new mode
	
	LOGGING("------------------------")
	LOGGING(_argv[0])
	LOGGING("------------------------")
	
	_var = _argv[0]
	//saving the argument as a variable
	
	_possiblemodes = ("purpleman","intodreams","Edgybitch")
	
	LOGGING(ASEARCH(_var,_possiblemodes))
	
	if ASEARCH(_var,_possiblemodes) != -1
	{
		if nowmode != _var
		//if current mode is not the same as the new mode
		{
			oldmode = nowmode
			nowmode = _var
		}
	}
}


pickup //why is this here instead of mouse.dic
{	
	if nowmode == "intodreams"
	{
		if stonemode != "on"
		{
			"\0\s[38]"
		}
	}
	elseif nowmode == "Edgybitch"
	{
		"\0\s[12]"
	}
	elseif (punchout >= 15 || nicensadlevel <= -50) && Edgybitch == "off" 
	//now you don't have to check Edgybitch twice
	{
		"\0\s[39]"
	}
	elseif sleepingmode == "on"
	{
		"\0\s[5]"
	}
	elseif sittang == "on"
	{
		"\0\s[1]"
	}
	else
	{
		//if nicensadlevel >= 75, will randomly choose between >=75 pose and default
		"\0\s[38]"
		
		if nicensadlevel >= 75
		{
			if blushiemode == "on"
			{
				"\0\s[45]\i[2]\i[3]"
			}
			else
			{
				"\0\s[45]\i[1]"
			}
		}
	}
}

surface0
{
	if nowmode == "intodreams"
	{
		if stonemode == "on"
		{
			"\0\s[1621]"
		}
		elseif sadnicelevel >= 25
		{
			"\0\s[0]"
		}
		else
		{
			"\0\s[0]\i[1]"
		}
	}
	elseif nowmode == "Edgybitch"
	{
		"\0\s[0]"
	}
	elseif sleepingmode == "on"
	{
		"\0\s[5]"
	}
	elseif nicensadlevel <= -25
	{
		if sittang == "on"
		{
			"\0\s[1]"
		}
		else
		{
			"\0\s[0]\i[12]"
		}
	}
	elseif nicensadlevel >= 25
	{
		if sittang == "on"
		{
			"\0\s[1]\i[14]"
		}
		else
		{
			"\0\s[0]\i[14]\i[15]"
		}
	}
	else
	{
		if sittang == "on"
		{
			"\0\s[1]"
		}
		else
		{
			"\0\s[0]\i[10]"
			"\0\s[0]\i[15]"
		}
	}
}

attn
{
	if nowmode == "Edgybitch"
	{
		"\0\s[0]"
	}
	elseif sleepingmode == "on"
	{
		"\0\s[5]"
	}
	elseif nicensadlevel <= -25
	{
		if sittang == "on"
		{
			"\0\s[1]\i[9]"
		}
		else
		{
			"\0\s[0]\i[12]"
		}
	}
	elseif nicensadlevel >= 25
	{
		if sittang == "on"
		{
			"\0\s[1]\i[7]\i[14]"
		}
		else
		{
			"\0\s[0]\i[14]\i[15]"
		}
	}
	else
	{
		if sittang == "on"
		{
			"\0\s[1]\i[7]"
		}
		else
		{
			"\0\s[0]\i[10]"
			"\0\s[0]\i[15]"
		}
	}
}

annoyed
{
	if sittang == "on"
	{
		"\0\s[1]\i[9]"
	}
	else
	{
		"\0\s[0]\i[11]\i[10]"
		"\0\s[0]\i[13]\i[10]"
	}
}

scared
{
	"\0\s[0]\i[12]"
}

MUNCH
{
	if sittang == "on"
	{
		"\0\s[1]\i[39]"
	}
	elseif nicensadlevel <= -20
	{
		"\0\s[25]" //Temp dialogue
	}
	else
	{
		"\0\s[25]"
	}
}

dreambday //dream's one other appearance lol
{
	"\0\s[13]Oh,\w4 it's %(bornmonthprint) %(borndayprint), \w3right?\w8\n\nThat's your birthday, \w4so uh-\0\s[7]\w8\1\s[1625]\w8\w8*\w5 (\w4.\w4.\w4.\w4)\w8\0\s[36]\n\nanDream what are you doing here!!\1\n\nComing to say hi to %(username).\0\n\nBut-\n\n\w5\1\n\n%(username) already knows about me though,\w4 so it's fine!\n\n\0\s[8]Fine but you can't stay here...\n\n\w8\1Okay!\w7\n\n\1\s[1626]Hello %(username),\w4 are you having a good birthday?\w6 I hope you are cause I dunno how to tell from here. \w8\1\s[1625]Nightmare, this place is really weird.\0\s[8]\w8I know that,\w4 I live here.\1\w8\n\nOkay.\w7\1\s[1626]Happy birthday %(username)!\w8\w8\w8\1\s[10]\e"
}

On_\person //idk what this is
{
 	person
}



Ord
//by Worm. returns the number in its proper ordinal
{
	_number = TOSTR(_argv[0])
	_ones = (_number%10)
	_tens = (_number/10)
	
	if _tens == 1 || _ones > 3
	{
		_number = _number+'th'
	}
	elseif _ones == 3
	{
		_number = _number+'rd'
	}
	elseif _ones == 2
	{
		_number = _number+'nd'
	}
	elseif _ones == 1
	{
		_number = _number+'st'
	}
	else
	{
		_number = _number+'th'
	}
	
	_number
}

ABS
//absolute value
{
	SQRT(POW(_argv[0],2))
}

//ellipses of different wait times...
lps
{
	".\w%(_argv[0]).\w%(_argv[0]).\w%(_argv[0])"
}

randomfunction
{
	"\C"
	--
	"\![open,calendar]"
	"\![open,configurationdialog]"
	ChoiceSystemInformation
	"\![biff]"
	
}

speed
//text speed
{
	"\![set,balloonwait,%(_argv[0])]"
}

//if you want my get season function, it's here:

OnES
//you'll need my srievents.cgi file for this if you wanna use it
//i moved my copy from the Radio into your Extras folder, if you wanna try it out
{
	_year = GETTIME()[0]
	
	if _argv[0] != ""
	//another one where you can set it to a custom year. this can be baleted
	{
		_year = _argv[0]
	}
	
	//save the year this function is checking as a variable so the ghost doesn't have to search this file every time we ask it for the season
	seasonevalyear = _year
	
	//regex to search through the file
	regex_spr = "\s+(\d{4}).*3\/(\d{2,3})\s{0,3}(\d+):"
	regex_sum = "\s+(\d{4}).*6\/(\d{2,3})\s{0,3}(\d+):"
	regex_aut = "\s+(\d{4}).*9\/(\d{2,3})\s{0,3}(\d+):"
	regex_win = "\s+(\d{4}).*12\/(\d{2,3})\s{0,3}(\d+):"
	
	_file = "Extras\\srevents.cgi"
	_buff = ""
	
	//placeholder values to save the first day of each month
	_spr = ""
	_sum = ""
	_aut = ""
	_win = ""
	
	FCHARSET(1)
	
	if FOPEN(_file,'r')
	{
		for _buff = FREAD(_file); _buff != -1; _buff = FREAD(_file)
		{
			if RE_SEARCH (_buff, regex_spr)
			{
				//spring equinox
				if TOINT(RE_GETSTR[1]) == _year
				{
					_spr = RE_GETSTR[2]
				}
			}
			if RE_SEARCH (_buff, regex_sum)
			{
				//summer solstice
				if TOINT(RE_GETSTR[1]) == _year
				{
					_sum = RE_GETSTR[2]
				}
			}
			if RE_SEARCH (_buff, regex_aut)
			{
				//autumn equinox
				if TOINT(RE_GETSTR[1]) == _year
				{
					_aut = RE_GETSTR[2]
				}
			}
			if RE_SEARCH (_buff, regex_win)
			{
				//winter solstice
				if TOINT(RE_GETSTR[1]) == _year
				{
					_win = RE_GETSTR[2]
				}
			}
		}
	}
	--
	FCLOSE(_file)
	--
	//we save the four first days of the seasons as an array because i feel like it
	astro_events = (_spr,_sum,_aut,_win)
}


season
{
	if GETTIME()[0] != seasonevalyear
	//if the current year doesn't match seasonevalyear
	{
		OnES
		//check the srevents file to get the astronomical season
	}
	
	_month = GETTIME[1]
	_day = GETTIME[2]
	
	if _argv[0] != ""
	//this was just put in if you wanted to figure out what season a certain date would be. you can ignore it or delete this if check as you please
	{
		_month = _argv[0]
		_day = _argv[1]
	}
	
	//setting temporary variables so I can easily do the southern hemisphere switcheroo
	_winter = "Winter"
	_spring = "Spring"
	_summer = "Summer"
	_autumn = "Autumn"
	
	if menusphere == 'Southern'
	{
		_winter = "Summer"
		_spring = "Autumn"
		_summer = "Winter"
		_autumn = "Spring"
	}
	
	//if the file decided not to work for whatever reason, the first day of each season is set to the 21st by default
	_dspr = 21
	_dsum = 21
	_daut = 21
	_dwin = 21
	
	//if the file is working (i.e., is returning the first day of each season as a potential integer) convert them to integers
	//you have to make the check, or else strings will automatically be converted to the integer 0 (iirc)
	if ISINTSTR(astro_events[0]) == 1
	{
		_dspr = TOINT(astro_events[0])
	}
	if ISINTSTR(astro_events[1]) == 1
	{
		_dsum = TOINT(astro_events[1])
	}
	if ISINTSTR(astro_events[2]) == 1
	{
		_daut = TOINT(astro_events[2])
	}
	if ISINTSTR(astro_events[3]) == 1
	{
		_dwin = TOINT(astro_events[3])
	}

	switch _month
	//looooong switch statement, but surprisingly simple once you get past that
	{
		"" //nothing for month 0
		_winter
		_winter
		{
			if _day < _dspr
			//it's march! if the day is smaller than the first day of spring, then it is still winter!
			{
				_winter
			}
			else
				//and vice versa
			{
				_spring
			}
		}
		_spring
		_spring
		{
			if _day < _dsum
			{
				_spring
			}
			else
			{
				_summer
			}
		}
		_summer
		_summer
		{
			if _day < _daut
			{
				_summer
			}
			else
			{
				_autumn
			}
		}
		_autumn
		_autumn
		{
			if _day < _dwin
			{
				_autumn
			}
			else
			{
				_winter
			}
		}
	}
}
