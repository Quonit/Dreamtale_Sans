OnFileDrop2
{
	_filepath = SPLITPATH(reference0)
	_filename = _filepath[2]
	_fileext = TOLOWER(_filepath[3])
	case _fileext
	{
		when ".jpg", ".jpeg", ".bmp"
		{
			Wallpaperfile = reference0
			
			"\0\s[0]The file you dropped is %(_filename)%(_fileext).\w8\i[55]How would you like to set this picture as your wallpaper?\n\n[half]/
			\q[Centered,SetWallpaper_0]\n/
			\q[Tiled,SetWallpaper_1]\n/
			\q[Stretched,SetWallpaper_2]\n\n/
			\q[No thanks,SetWallpaper_Cancel]\e"
		}
		when ".mid", ".wav", ".mp3", ".wma", ".au" //Other file formats you might want to give your ghost a specific response to.
		{
			if nowmode == "Edgybitch"
			{
				"\0\s[0]\i[13]What, \w4do you want me to sing for you or something?\e"
				"Pfft. Should I be flattered?"
			}
			elseif nowmode == "intodreams"
			{
				"\0\s[2002]* (Dream doesn't seem to know what it is...)\0\s[2002]Um\w2.\w2.\w2.\w8 Thank you\w2.\w2.\w2.\w2?\e"
			}
			else
			{
				"\0\s[8]%(_filename)%(_fileext) is a music file...\n\n\w8I can't do anything with those, \w8sorry.\n\n\w8Maybe try another ghost?\e"
			}
		}
		others
		{
			"%(surface0)This is %(_filename)%(_fileext).\w8\e"
		}
	}
}
//This set of options sets the wallpaper up.
Select.SetWallpaper_0
{
	"\![set,wallpaper,%(Wallpaperfile),center]\i[55]* (The image is centered.)\e"
}
Select.SetWallpaper_1
{
	"\![set,wallpaper,%(Wallpaperfile),tile]\i[55]* (The image is tiled.)\e"
}
Select.SetWallpaper_2
{
	"\![set,wallpaper,%(Wallpaperfile),stretch]\i[55]* (The image is stretched.)\e"
}
Select.SetWallpaper_Cancel
{
	"\i[55]* (The wallpaper was canceled.)\e"
}
 //---- OnInstallBegin -------------------------------------------------------
OnInstallBegin
{
	if nowmode == "Edgybitch"
	{
		"\0\s[1]Ah,\w4 somebody to replace me, I see?\w8\n\n\0\s[4]Oh don't worry, \w4I'm not mad about it.\w5 Here, I'll even install it for you.\e"
		"\0\s[1]* (Installing file\w4.\w4.\w4.\w4)\e"
	}
	else
	{
		"\0\s[4]A ghost...? \w8Sure, I'll install it.\e"
		"%(surface0)* (Installing file\w4.\w4.\w4.\w4)\e"
	}
}
OnInstallComplete
{
	"\0"
	--
	if reference0 == "shell"
	{	
		if reference1 == "Nightmare"
		{
			nowmode = "Edgybitch"
			wasemo = "on"
			"\0\s[1]This should come with the ghost.\w8 Wonder what Quonit screwed up this time.\e"
		}
		else //For any other shell they may install.
		{
			"%(surface0)\i[55]* (%(reference1) was installed.)\e" 
		}
	}
	elseif reference0 == "ghost"
	{
		"%(surface0)\i[55]* (%(reference1) has been successfully installed.)\e"
	}
	elseif reference0 == "balloon"
	{
		"%(surface0)\i[55]* (%(reference1) has been successfully installed.)\e"
	}
	elseif reference0 == "plugin"
	{
		"%(surface0)\i[55]* (Plugin %(reference1) has been successfully installed.)\e"
	}
}

OnInstallFailure
{
	if nowmode == "Edgybitch"
	{
		"\0\s[0]* (The installation has failed.)\n\n\w5"
		"\0\s[0]How sad.\w5 It didn't work.\w8 Tch.\n\n\w5"
	}
	else
	{
		"%(surface0)\i[55]* (The installation has failed.)\n\n\w5"
		"\0\s[8]I couldn't install it, sorry.\n\n\w5"
	}
	--
	if reference0 == "unsupported"
	{
		"%(surface0)\i[55]* (The file is unsupported.)\e"
	}	
	elseif reference0 == "extraction"
	{
		"%(surface0)\i[55]* (The file could not be extracted properly.)\e"
	}
}
 
OnInstallRefuse
{
	"\0\s[8]I can't install this. \w4I think it's for %(reference0) instead.\e"
	"%(surface0)\i[55]* (This file is for %(reference0))\e"
}
 
OnVanishSelecting
{
	"%(surface0)\i[55]* (Do you wish to uninstall Dreamtale Sans from your computer?)\e"
}
OnVanishSelected
{
	"%(surface0)\i[55]* (You've decided to uninstall Dreamtale Sans.)\e"
}
OnVanishCancel
{
	"%(surface0)\i[55]* (You've decided not to uninstall Dreamtale Sans.)\e"
}
TalkVanishButtonHold
{
	"\0\s[9]Um\w3.\w3.\w3. \w5are you gonna uninstall me or not?\e"
}
OnVanished
{
	"\0\s[3]Huh\w2.\w2.\w2.\w8\n\nI swear I saw someone.\w8 Guess they disappeared\w2.\w2.\w2."
}

OnBIFFBegin
{
	if nowmode != "Edgybitch"
	{
		"%(surface0)\i[55]* (Checking e-mail\w4.\w4.\w4.)\e"
	}
	else
	{
		"\C\w8\w8Yeah,\w5 yeah.\w5%(lps(4))"
	}
}

OnBIFFComplete
{
	if reference0 == 0
	{
		"%(surface0)\i[55]* (There is no new mail.)\e"
	}
	elseif reference0 == 1
	{
		"%(surface0)\i[55]* (There is one new email.)\e"
	}
	elseif reference0 > 1 && reference0 < 11
	{
		"%(surface0)\i[55]* (There are %(reference0) emails.)\e"
	}
	elseif reference0 > 100
	{
		"%(surface0)\i[55]* (There are %(reference0) emails unread.)\e"
	}
	else
	{
		"%(surface0)\i[55]* (There are %(reference0) emails.)\e"
	}
}

OnBIFFFailure
{
	if reference0 == "timeout"
	{
		if Edgybitch == "on"
		{
			"\0\s[1]Connection timed out.\w5 What a shame.\e"
		}
		else
		{
			"\0\s[8]The connection timed out.\e"
		}
	}
	elseif reference0 == "kick"
	{
		"\0\s[8]I can't access the account.\e"
	}
	elseif reference0 == "defect"
	{
		if nowmode != "Edgybitch"
		{
			"\0\s[0]\i[55]* (The email account was not set up properly.)\w8\n\n* (It can be reset at the POP menu.)\![open,configurationdialog]\e"
		}
		else
		{
			"Ain't working.\w5 Might wanna reset your account at the POP menu.\w8\![open,configurationdialog]\w8\n\n* (He's smirking for some reason)"
		}
	}
	elseif reference0 == "artificial"
	{
		"%(surface0)\i[55]* (Email check was canceled.)"
	}
	else
	{
		if nowmode == "Edgybitch"
		{
			"\0\s[4]I only got an error code '%(reference[0])'.\w8\n\nHow sad.\e"
		}
		else
		{
			"\0\s[8]I only got an error code '%(reference[0])'.\w8\n\nSorry.\e"
		}
	}
}

OnUpdateBegin
{
	if nowmode == "Edgybitch"
	{
		"%(surface0)\i[55]* (Starting the update process.)\e"
	}
	else
	{
		"%(surface0)\i[55]* (Starting the update process.)\w8\e"
		"\0\s[4]I wonder what kind of things could be in the update...\w8\e"
	}
	if reference0 == "artificial"
	{
		"%(surface0)\i[55]* (The user cancelled the update manually.)"
	}
}
OnUpdateReady
{
	"%(surface0)\i[55]* (There are %(reference[0]) new files.)\w8\e"
}
OnUpdateComplete
{
	if reference0 == "none"
	{
		"%(surface0)\i[55]* (There are no new files.)\e"
		"\0\s[2]Doesn't look like there's anything new to update with.\e"
	}
	else
	{
		"%(surface0)\i[55]* (Update successful!)\n\n\w8* (Do you want to read the changelog?)\n\n/
		\q[See Changelog,OnShowLog]   \q[No thanks,Cancel]"
		--
		UpdateVars
	}
}
OnShowLog
{
	"\![open,file,changelog.txt]\e"
}

OnUpdateFailure
{
	_file = SPLITPATH(reference1)[2] + SPLITPATH(reference1)[3] //This gets the name and extension of the offending file
	if reference0 == "timeout"
	{
		"%(surface0)\i[55]* (The update connection timed out.)\e"
	}
	elseif reference0 == "md5 miss"
	{
		"%(surface0)\i[55]* (The MD5 hash of the files don't match. \w8There was an MD5 error on file %(_file).)\e"
	}
	else //for other errors
	{
		"%(surface0)\i[55]* (The update could not be completed.)\w8\n\n* (The error is '%(reference0)'.)\e"
	}
}
OnUpdate.OnDownloadBegin
{
	if "aitalk" _in_ reference0
	{
		"%(surface0)\i[55]* (You get the feeling he might have more things to say.)\e"
	}
	else //for files not specified above
	{
	"\0\s[1]\i[55]* (...)\e"
	}
}

OnUpdate.OnMD5CompareBegin {}
OnUpdate.OnMD5CompareComplete {}
OnUpdate.OnMD5CompareFailure
{
	"%(surface0)\i[55]* (The MDI values don't seem to match.)\w8\e"
}
OnHeadlinesenseBegin
{
	"%(surface0)\i[55]* (You've selected %(reference0).)\e"
}
OnHeadlinesense.OnFind
{
	if reference2 == "First" || reference2 == "First and Last"
	{
		"%(surface0)\i[55]%(reference0):"
	}
	elseif reference2 == "Next"
	{
		"%(surface0)\i[55]%(reference0):"
	}
	elseif reference2 == "Last"
	{
		"%(surface0)\i[55]%(reference0):"
	}
	--
	"\n\n%reference3\n"
	--
	if reference2 == "First" || reference2 == "Next"
	{
		"\![*]\q[Next,] - \![*]\q[Stop,Headline_Cancel]\e"
	}
	else
	{
		"\![*]\q[Stop,Headline_Cancel]\e"
	}
	
}
Select.Headline_Cancel
{
	"\i[55]* (Headline viewing complete.)\e"
}
OnHeadlinesenseComplete
{
	"%(surface0)\i[55]* (No update. %(reference0).)\e"
}
OnHeadlinesenseFailure
{
	"%(surface0)\i[55]* (The feed can't updated because "
	--
	if reference0 == "can't download"
	{
		"it can't be downloaded.)"
	}
	elseif reference0 == "can't analyze"
	{
		"it can't be analyzed.)"
	}
	else //other errors
	{
		"...\w6 for an unknown cause.)"
	}
	--
	"\e"
}

//UPDATE VARIABLES 
//These are new variables to initialize after an update. By checking if the variable doesn't exist before initializing it, we prevent variables already in use from being overwritten. This is VERY IMPORTANT, or you risk resetting the user's progress on your new variables every time they update!
//ISVAR is a built in YAYA function that checks if a variable exists (is initialized) or not. It returns 0 if the variable doesn't exist, and 1 if it does. -Zi
UpdateVars
{
	/*
	//already set in onboot:
	lastTalk = ""
	lasttalked = 0
	passmin = 0
	passsec = 0
	sleepingmode = "off"
	sittang = "off"
	*/
	if dontmovestatsitshalloween == 'on'
	{
		dontmovestatsitshalloween = 'off'
		nowmode = 'purpleman'
		if SHIORI3FW.ShellName == 'Nightmare'
		{
			"\![change,Shell,Dreamtale Sans]"
		}
	}
	
	if !ISVAR('menuname'); {menuname='off'}
	if !ISVAR('sittang'); {sittang='off'}
	
	if !ISVAR('nowmode')
	{
		if Edgybitch == "on"; {nowmode == "Edgybitch"}
		elseif intodreams == "on"; {nowmode == "intodreams"}
		else; {nowmode='purpleman'}
	}
	
	if !ISVAR('mikireflag'); {mikireflag=0}
	if !ISVAR('givesleepyblankie'); {givesleepyblankie='off'}
	if !ISVAR('dontmovestatsitshalloween'); {dontmovestatsitshalloween='off'}
	if !ISVAR('nowshell'); {nowshell = SHIORI3FW.ShellName}
	
	//toggleable
	if !ISVAR('menusphere'); {menusphere='Northern'}
	if !ISVAR('username'); {username='User'}
	if !ISVAR('birthdayprint'); {birthdayprint='????'}
	if !ISVAR('talktime'); {birthdayprint='5 minutes'}
	//single-use
	if !ISVAR('nightynight'); {nightynight='off'}
	if !ISVAR('blushiemode'); {blushiemode='off'}
	if !ISVAR('privacyrespecter'); {privacyrespecter='off'}
	if !ISVAR('maremare'); {maremare='off'}
	if !ISVAR('seensoul'); {seensoul='off'}
	if !ISVAR('wasemo'); {wasemo='off'}
	if !ISVAR('sodreamy'); {sodreamy='off'}
	if !ISVAR('talkaboutlater'); {talkaboutlater='off'}
	if !ISVAR('headbandexpo'); {headbandexpo='off'}
	if !ISVAR('momstreeexpo'); {momstreeexpo='off'}
	if !ISVAR('brotherexpo'); {brotherexpo='off'}
	if !ISVAR('askaboutnamee'); {askaboutnamee='off'}
	if !ISVAR('starcrownexpo'); {starcrownexpo='off'}
	if !ISVAR('hasdreamplush'); {hasdreamplush='off'}
	if !ISVAR('hasmareplush'); {hasmareplush='off'}
	if !ISVAR('hastea'); {hastea='off'}
	if !ISVAR('hasblankie'); {hasblankie='off'}
	if !ISVAR('hasviolin'); {hasviolin='off'}
	//counters
	
	if !ISVAR("posact") && !ISVAR("negact")
	{
		if nicesadlevel > 0
		{
			posact = nicesadlevel
			negact = 0
		}
		else
		{
			negact = TOINT(ABS(nicesadlevel))
			posact = 0
		}
	}
	elseif !ISVAR("posact") || !ISVAR("negact")
	{
		if !ISVAR("posact"); {posact = 0}
		if !ISVAR("negact"); {negact = 0}
	}
	
	if !ISVAR('ily'); {ily=0}
	if !ISVAR('stroke'); {stroke=0}
	if !ISVAR('gooppets'); {gooppets=0}
	if !ISVAR('metalpet'); {metalpet=0}
	if !ISVAR('punchout'); {punchout=0}
	if !ISVAR('flirtlevel'); {flirtlevel=0}
	if !ISVAR('snoop'); {snoop=0}
	if !ISVAR('respect'); {respect=0}
	if !ISVAR('betrayalvar'); {betrayalvar=0}
	if !ISVAR('apologized'); {apologized=0}
}

OnUpdatedataCreating
{
	"%(surface0)\i[55]* (* (Creating the updates2.dau file.))\e"
}
OnUpdatedataCreated
{
	"%(surface0)\i[55]* (Successfully created updates2.dau.)\e"
}
OnNarCreating
{
	"%(surface0)\i[55]* (Creating the .nar file.)\e"
}
OnNarCreated
{
	"%(surface0)\i[55]* (Successfully created '%(reference0)'.)\e"
}
OnSNTPBegin
{
	"%(surface0)\i[55]* (Connecting to %(reference0) for the time.)\e"
}
OnSNTPCompare
{
	"Retrieved Time: %reference1[1]/%reference1[2]/%reference1[0] %reference1[3]:%reference1[4]:%reference1[5]\w2\n/
	Your Time: %reference2[1]/%reference2[2]/%reference2[0] %reference2[3]:%reference2[4]:%reference2[5]\w2\n\n"
	--
	if reference3 == 0
	{
		"%(surface0)\i[55]* (The clock is accurate.)\e"
	}
	else
	{
		"\0\s[1]\i[55]\s[10]\b[1]* (Your clock doesn't match.\w6\nDo you want it fixed?)\n\n/
		\![*]\q[Fix it,OnSNTPEXECUTE]\n/
		\![*]\q[Leave it alone,OnSNTPCANCEL]\e"
	}
}
OnSNTPEXECUTE
{
	"%(surface0)\i[55]* (The clock has been fixed.)\6\e"
}
OnSNTPCANCEL
{
	"%(surface0)\i[55]* (You decide to leave it alone.)\e"
}
OnSNTPFailure
{
	"%(surface0)\i[55]* (The clock wasn't changed. \w8Something went wrong.)\e"
}
OnDisplayChange
{
	displaybpp	= reference0
	displaywidth  = reference1
	displayheight = reference2
}
OnScreenSaverStart
{
	if nowmode == "Edgybitch"
	{
		"\0\s[5]What the hell is this???\e"
	}
	else
	{
		"\0\s[3]Um- \w8.\w8.\w8.\w8\n\n\0\s[7]what's going on??\e"
	}
}
OnScreenSaverEnd
{
	if nowmode == "Edgybitch"
	{
		"\0\s[5]What the hell was that??\e"
	}
	else
	{
		"\0\s[8]Okay... good, it's gone.\e"
	}
}
OnApplicationBoot
{
	"%(surface0)\i[55]* (%(reference0) just started.)\e"
}
OnApplicationClose
{
	"%(surface0)\i[55]* (%(reference0) has closed.)\e"
}
OnApplicationFileOpen
{
	"%(surface0)Opening %(reference1).\e"
}
OnBatteryLow
{
	"%(surface0)\i[55]* (The laptop's battery is low. \w8There is %(reference0) power left.)\e"
}
OnBatteryCritical
{
	"\0\s[1]\i[55]* (The laptop's battery is critically low.)\e"
}
OnSysResourceLow
{
	"%(surface0)\i[55]* (The system resources are low.)\e"
}
OnShellScaling
{
	if reference0 >= 150
	{
		if nowmode == "Edgybitch"
		{
			"\0\s[1]You know\w3.\w3.\w3.\n\n\w8I wonder if I can change my size on my own.\e"
			"\0\s[2]\i[5]\i[107]* (Biggest-sized goop.)\e"
		}
		else
		{
			"\0\s[3]Dunno why you'd want me to take up so much of your screen\w3.\w3.\w3. \w4But okay.\e"
			"%(surface0)\i[55]* (He doesn't seem to have noticed.)\e"
			"%(surface0)\i[55]* (Big size sans.)\e"
		}
		
	}
	elseif reference0 == 100
	{
		if nowmode == "Edgybitch"
		{
			"\0\s[1]Normal-sized. \w8\s[8]How boring.\e"
		}
		else
		{
			"%(surface0)\i[55]* (He doesn't seem to have noticed.)\e"
			"\0\s[4]Back to normal...\e"
			"%(surface0)\i[55]* (Normal sized sans.)\e"
		}
	}
	elseif reference0 == 50
	{
		if nowmode == "Edgybitch"
		{
			"\0\s[2]\i[5]Trying to get me out of the way so you don't have to think about what you did??\e"
			"\0\s[8]Either you're trying to get me out of the way or you just have a really shitty screen.\e"
		}
		else
		{
			"\0\s[7]Um\w3.\w3.\w3. \w8\0\s[13]\n\nEverything is really big now.\e"
			"%(surface0)\i[55]* (He doesn't seem to have noticed.)\e"
			"%(surface0)\i[55]* (Smol sans.\w8 Fun-sized sans.)\e"
		}
	}
}

BalloonCheck
{
	if ASEARCH("Status",var.req.key) != -1
	{
		_currentstatus = var.req.value[ASEARCH("Status",var.req.key)]
		if "balloon" _in_ _currentstatus; 1
		else; 0
	}
	else; 0
}

MenuCheck
{
	if ASEARCH("Status",var.req.key) != -1
	{
		_currentstatus = var.req.value[ASEARCH("Status",var.req.key)]
		if "choosing" _in_ _currentstatus; 1
		else; 0
	}
	else; 0
}

Onsittangoffsleepingmodeon
{
	sleptiem = 1
	sittang = "off"
	sleepingmode = "on"
	"\C\![bind,Blanket,cape,0]\w8"
}

OnSelfStand
{
	sittang = "off"
	lasttalked = 0
}

upsiedaisy
{
	"\s[16]"
}

OnWakeyWake
{
	sleepingmode='off'
	lasttalked = 0
	--
	"\C\![bind,Blanket,cape,0]"
}


reversetalktime
{
	if "30" _in_ talktime
	{
		aitalkinterval = 30
	}
	elseif "5" _in_ talktime
	{
		aitalkinterval = 300
	}
	elseif "guess" _in_ TOLOWER(talktime)
	{
		aitalkinterval = 0
	}
	elseif "3" _in_ talktime
	{
		aitalkinterval = 180
	}
	else //every minute is just 'minute'
	{
		aitalkinterval = 60
	}
}